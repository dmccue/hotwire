# Important: For Ubuntu 18.04 please run 'ln -sf /run/systemd/resolve/resolv.conf /etc/resolv.conf' to enable DNS resolution for container services
# add 'nameserver 127.00.53' to /etc/resolv.conf

version: "3"
services:

  ubuntutest:
    build: ./app-ubuntutest      
    image: ubuntutest
    entrypoint: bash -c
    command: exit 0

      
  httpd:
    hostname: httpd
    build: ./app-httpd
    ports:
    - "80"
    volumes:
    - ./app-httpd/htdocs:/usr/local/apache2/htdocs
    dns: 1.1.1.1
    networks:
    - default
    healthcheck:
      test: nc -z localhost 80 && curl -f http://localhost 2>&1 >/dev/null


  wireguard:
    hostname: wireguard
    build: ./app-wireguard
    ports:
    - "51820:51820/udp"
    volumes:
    - /data/wireguard:/etc/wireguard
    - /var/lib/dkms/wireguard:/var/lib/dkms/wireguard
    - /lib/modules:/lib/modules
    cap_add:
    - NET_ADMIN 
    - SYS_MODULE
    networks:
    - default
    healthcheck:
      test: wg show | grep listening
 

  pihole:
    hostname: pihole
    #image: pihole/pihole
    build: ./app-pihole
    dns:
    - 127.0.0.1
    ports:
    - "53/udp"
      #- "53:53/udp" #This breaks docker resolution
    - "80/tcp"
    - "443/tcp"
    volumes:
    - ./app-pihole/etc-dnsmasq.d:/etc/dnsmasq.d
    - ./app-pihole/etc-pihole:/etc/pihole
    environment:
      TZ: Europe/London
      DNSMASQ_LISTENING: local
      IPv6: 'False'
      DNSSEC: 'True'
      DNS1: 1.1.1.1
      DNS2: 1.0.0.1
      WEBPASSWORD: PiHole123
    networks:
    - default
    healthcheck:
      test: nc -z localhost 80 && curl -f http://localhost 2>&1 >/dev/null && nc -z localhost 53 && nc -zu localhost 53

# docker container create --name="portainer" \
#    --volume /opt/docker/volumes/portainer/data:/data \
#    --volume /var/run/docker.sock:/var/run/docker.sock \
#    --publish 9000:9000 \
#    --restart=always \
#    portainer/portainer

networks:
  default:
    ipam:
      driver: default
      config:
      - subnet: 172.21.0.0/16
