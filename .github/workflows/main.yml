name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
#  pull_request:
#    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel

jobs:

  build:
    name: Build and Run
    runs-on: ubuntu-latest
    steps:


    - name: recreate deploy repo via ssh
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}

        script: |
          echo start epoch: $(date +%s)
          echo hostname: $(hostname -s)

          if [ -d ~/deploy/hotwire/ ]; then
            cd ~/deploy/hotwire && sudo rm -rf ~/deploy/hotwire
            cd ~
          fi
          mkdir -p ~/deploy && cd ~/deploy
          git clone https://github.com/dmccue/hotwire.git hotwire && cd hotwire || { echo Error encountered - exit code $?; exit 1; }

          echo end epoch: $(date +%s)
          echo pwd: $(pwd)

    - name: Run ansible deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        script: |
          echo start epoch: $(date +%s)
          echo hostname: $(hostname -s)

          cd ~/deploy/hotwire &&
          ansible-playbook -v playbook.yml

          echo end epoch: $(date +%s)
          echo pwd: $(pwd)


    - name: LINT test Dockerfiles via ssh
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        script: |
          echo start epoch: $(date +%s)
          echo hostname: $(hostname -s)

          cd ~/deploy/hotwire &&
          ./test-lint

          echo end epoch: $(date +%s)
          echo pwd: $(pwd)


    - name: execute compose BUILD script via ssh
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        script: |
          echo start epoch: $(date +%s)
          echo hostname: $(hostname -s)

          cd ~/deploy/hotwire && \
          echo Compose Build && \
          docker-compose build --pull || { echo Error: build unsuccessful - exit code $?; docker info; exit 1; }

          echo end epoch: $(date +%s)
          echo pwd: $(pwd)


    - name: execute compose RUN script via ssh
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        script: |

          cd ~/deploy/hotwire
          echo Compose Down &&
          docker-compose down || { echo Error: compose down failed - exit code $?; exit 1; }

          echo Compose Up &&
          export FQDN=$(curl http://169.254.169.254/latest/meta-data/public-hostname) &&
          docker-compose up -d --force-recreate || { echo Error: compose up failed - exit code $?; docker-compose ps; exit 1; }
          echo Compose ps &&
          docker-compose ps

          echo epoch: $(date +%s)
          echo pwd: $(pwd)
